"""
Django settings for Helpdesk project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-rhawhp^k9-!h5g8^d#)zpl%4rmpiz^ypuo9j5so1r5t6&m+4xr'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
   '*'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    #own

    'tickets',
    'user_module',
    'manager',
    'engineer',
    'master',
    'csp',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'user_module.middleware.SessionTimeoutMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'user_module.middleware.CustomSecurityHeadersMiddleware',
    'user_module.middleware.ContentTypeNosniffMiddleware',
    'csp.middleware.CSPMiddleware',
    'user_module.middleware.CSPNonceMiddleware',

]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}


ROOT_URLCONF = 'Helpdesk.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'user_module.context_processors.csp_nonce',  
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Helpdesk.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'helpdesk',
        'USER':'postgres',
        'PASSWORD':'postgres',
        'HOST':'localhost',
        'PORT':'5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]





# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/kolkata'

USE_I18N = True

USE_TZ = True

# settings.py
# Session settings: ensure secure session id cookie
SESSION_COOKIE_AGE = 3600  # 1 hour
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_SAVE_EVERY_REQUEST = True
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SECURE = True
SESSION_COOKIE_SAMESITE = 'Strict'

# CSRF cookie settings (if using CSRF cookies)
CSRF_COOKIE_SECURE = True

# CSRF cookie settings
CSRF_COOKIE_HTTPONLY = True  # Allows JavaScript to access CSRF token if needed
CSRF_USE_SESSIONS = True      # Store CSRF token in session
CSRF_TRUSTED_ORIGINS = [
    #'https://wwdsupport.titan.in',
    'https://trusted.cdn.com',
    'https://cdn.jsdelivr.net',
    'http://127.0.0.1:8000/',
]
CSRF_COOKIE_SAMESITE = 'Strict'     # SameSite restriction

SECURE_BROWSER_XSS_FILTER = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

if os.environ.get('DJANGO_ENV') == 'development':
    SECURE_SSL_REDIRECT = False
    SECURE_REFERRER_POLICY = 'strict-origin-when-cross-origin'
X_FRAME_OPTIONS = 'DENY'
SECURE_HSTS_SECONDS = 31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS = False
SECURE_HSTS_PRELOAD = False
SECURE_CONTENT_TYPE_NOSNIFF = False

# SSL Settings
#SECURE_SSL_HOST = 'wwdsupport.titan.in'
#SECURE_SSL_REDIRECT = True
#SECURE_SSL_PORT = 443

# Updated CSP Configuration
CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC = (
    #"'self'",
    "'nonce-{nonce}'",
    #"https://fonts.googleapis.com",
    #"https://cdn.jsdelivr.net",
    #"https://cdnjs.cloudflare.com",
    #"https://cdn.datatables.net",
    #"https://127.0.0.1:8000/static/",  # Allow local static files
    
)
 
CSP_INCLUDE_NONCE_IN = ['script-src', 'style-src']
 
CSP_SCRIPT_SRC_ELEM = CSP_SCRIPT_SRC
 
CSP_STYLE_SRC = (
    "'self'",
    "'nonce-{nonce}'",
    "'unsafe-inline'",
    "https://localhost:8000/static/css/",
    "https://fonts.googleapis.com",
    "https://cdn.jsdelivr.net",
    "https://cdnjs.cloudflare.com",
    "https://cdn.datatables.net",
    "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css",
    "https://cdn.jsdelivr.net/npm/sweetalert2@10.15.7/dist/sweetalert2.min.css",
    "https://cdnjs.cloudflare.com/ajax/libs/viewerjs/1.10.0/viewer.min.css",
)
 
CSP_STYLE_SRC_ELEM = CSP_STYLE_SRC
 
 
CSP_STYLE_SRC_ELEM = CSP_STYLE_SRC
CSP_FONT_SRC = (
    "'self'",
      "https://fonts.googleapis.com",
    "https://cdn.jsdelivr.net",
    "https://cdnjs.cloudflare.com",
    "https://cdn.datatables.net",
    "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css",
    "https://cdn.jsdelivr.net/npm/sweetalert2@10.15.7/dist/sweetalert2.min.css",
    "https://cdnjs.cloudflare.com/ajax/libs/viewerjs/1.10.0/viewer.min.css",
)
CSP_IMG_SRC = (
    "'self'",
    "data:",
    "blob:",
)
CSP_CONNECT_SRC = ("'self'",)
 
# Add MIME type configurations
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]
 

STATIC_URL = 'static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = BASE_DIR / "staticfiles"
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'uploads')

LOGIN_REDIRECT_URL = 'index'

LOGOUT_REDIRECT_URL = 'login'

LOGIN_URL = 'login'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


#email configuration

# settings.py

#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
#EMAIL_HOST = 'smtp.gmail.com'  # Gmail SMTP server
#EMAIL_PORT = 587  # Port for TLS
#EMAIL_USE_TLS = True  # Use TLS for secure connection
#EMAIL_HOST_USER = 'nandhinipinesphere@gmail.com'  # Your Gmail email address
#EMAIL_HOST_PASSWORD = 'lkky fgey oarj bvyh'  # Your Gmail email password or an app-specific password
#DEFAULT_FROM_EMAIL = 'nandhinipinesphere@gmail.com'  # Set the default "from" email address



# In your settings.py file

